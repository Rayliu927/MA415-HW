shiny::runApp()
rsconnect::setAccountInfo(name='eileenli', token='6550500CCB7FDEB022E5A75E73CC7B15', secret='61lca2ECNwRwNQCbqjQ0jfxc+mbj+Nhm9W6W4cHS')
library(rsconnect)
rsconnect::deployApp()
y
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
T2010 <- read.csv("bp appre 2010.csv")
T2010 <- read.csv("bp appre 2010.csv")
runApp('~/Desktop/MA415-615-Project-One-Ziran-Xi-ShihChing-master')
runApp()
runApp()
runApp()
runApp()
runApp('~/Desktop/MA415-615-Project-One-Ziran-Xi-ShihChing-master')
T2010 <- read.csv("bp appre 2010.csv")
T2017 <- read.csv("bp appre 2017.csv")
rownames(T2010) <- T2010[,1]
rownames(T2017) <- T2017[,1]
# sum apprehensions of sector and month in 2010
T2010 <- subset(T2010, select = -c(Sector))
# sort month in order
T2010 <- cbind(subset.data.frame(T2010)[,4:12],subset.data.frame(T2010)[,1:3])
monthSum2010 <- colSums((T2010))
T2010 <- rbind(T2010,monthSum2010)
rownames(T2010)[10] <- "Sector Total"
sectorSum2010 <- rowSums(T2010)
T2010 <- cbind(T2010,sectorSum2010)
colnames(T2010)[13] <- "Month Total"
# sum apprehensions of sector and month in 2017
T2017 <- subset(T2017, select = -c(Sector))
# sort month in order
T2017 <- cbind(subset.data.frame(T2017)[,4:12],subset.data.frame(T2017)[,1:3])
monthSum2017 <- colSums((T2017))
T2017 <- rbind(T2017,monthSum2017)
rownames(T2017)[10] <- "Sector Total"
sectorSum2017 <- rowSums(T2017)
T2017 <- cbind(T2017,sectorSum2017)
colnames(T2017)[13] <- "Month Total"
#compare apprehensions by months
sector <- rownames(T2010)
month <- colnames(T2010)
#The function takes in the index of the sector as input
plot_by_months <- function(i){
year <- rbind(T2010[i,1:12],T2017[i,1:12])
barplot(as.matrix(year), beside = T, col = c("red", "yellow"), bty="n",las=2,
main = "Compare Apprehensions Between 2010&2017 by Months")
legend("topright",
c(paste(sector[i] ,"2010"),paste(sector[i],"2017")),
pch=15,
col=c("red","yellow"),
bty="n"
)
}
#The function takes in month as input
plot_by_sectors <- function(i){
T2010<-t(T2010)
T2017<-t(T2017)
year <- rbind(T2010[i,1:9],T2017[i,1:9])
getOption("scipen")
opt <- options("scipen" = 20)
barplot(year, beside = TRUE, col = c("red", "yellow"), bty="n",las=2,
main = "Compare Apprehensions between 2010&2017 by Sectors"
)
legend("topleft",
c(paste(month[i] ,"2010"),
paste(month[i],"2017")),
pch=15,
col=c("red", "yellow"),
bty="n")
}
plot_by_sectors(13)
plot_by_months(10)
#In 2010, the sector that has most apprehensions is Tucson
most_2010 <- match(max(T2010[1:9,13]), T2010[1:9,13])
rownames(T2010)[most_2010]
#In 2017, the sector that has most apprehensions is Rio Grande Valley
most_2017 <- match(max(T2017[1:9,13]), T2017[1:9,13])
rownames(T2017)[most_2017]
# table for Tucson
T2010_Tuson <- T2010[most_2010,1:12]
# table for Rio Grande Valley
T2017_RGV <- T2017[most_2017,1:12]
# test if they have same sample mean
t.test(T2010_Tuson, T2017_RGV)
# In 2010, March, April,and May have the most apprehensions
top3_2010 <- order(T2010[10,1:12], decreasing = TRUE)[1:3]
colnames(T2010)[top3_2010]
# In 2017, November, October,and December have the most apprehensions
top3_2017 <- order(T2017[10,1:12], decreasing = TRUE)[1:3]
colnames(T2017)[top3_2017]
# table for March, April, and May in 2010
T2010_3m <- T2010[top3_2010,1:12]
# table for November, October, and December in 2017
T2017_3m <- T2017[top3_2017,1:12]
# test if they have same sample mean
t.test(T2010_3m, T2017_3m)
ts1 <- read.csv("PB monthly summaries.csv")
#delete first column
ts2 <- ts1[2:13]
#rearrange the columns by moving Oct, Nov, and Dec to the end
ts3 <- cbind(subset.data.frame(ts2)[,4:12],subset.data.frame(ts2)[,1:3])
#reverse data
ts4 <- ts3[ nrow(ts3):1, ]
#turn it to vectors
ts5 <- as.vector(t(ts4))
#create time series
ts6 <- ts(ts5,frequency=12,start=c(2000,1))
#plot time series
ts.plot(ts6, gpars=list(main ="Time Series Chart of Apprehensions from 2000 to 2017",xlab="year", ylab="Apprehensions", col= "black", lty=c(1:3)))
#caculate annual averages
ts_avg <- apply(ts4,1,mean)
#create annual averages in time series
ts_avg<-ts(ts_avg,start = c(2000.5), frequency=1)
#create segments and text for annual averages
#for (i in 1:18) {
# segments(1999+i,ts_avg[i],2000+i,ts_avg[i],col = 2,lwd = 1)
#text(2000.3 + i, ts_avg[i], labels = 1999+i, cex=0.6, col = "red" , font=1)
#}
#create points and connected dashed line for better visualization
points(ts_avg,col = "blue", pch=20)
lines(ts_avg,col = "blue", pch=20,lty=6)
#create legends
legend(2010,220000, legend = c("Monthly Apprehensions","Annual Averages by points","Annual Average connected by dashed line"),
col = c("black","blue", "blue"),pch =c(NA,20,NA),lty=c(1,NA,3), cex=0.6)
T2010 <- read.csv("bp appre 2010.csv")
T2017 <- read.csv("bp appre 2017.csv")
rownames(T2010) <- T2010[,1]
rownames(T2017) <- T2017[,1]
# sum apprehensions of sector and month in 2010
T2010 <- subset(T2010, select = -c(Sector))
# sort month in order
T2010 <- cbind(subset.data.frame(T2010)[,4:12],subset.data.frame(T2010)[,1:3])
monthSum2010 <- colSums((T2010))
T2010 <- rbind(T2010,monthSum2010)
rownames(T2010)[10] <- "Sector Total"
sectorSum2010 <- rowSums(T2010)
T2010 <- cbind(T2010,sectorSum2010)
colnames(T2010)[13] <- "Month Total"
# sum apprehensions of sector and month in 2017
T2017 <- subset(T2017, select = -c(Sector))
# sort month in order
T2017 <- cbind(subset.data.frame(T2017)[,4:12],subset.data.frame(T2017)[,1:3])
monthSum2017 <- colSums((T2017))
T2017 <- rbind(T2017,monthSum2017)
rownames(T2017)[10] <- "Sector Total"
sectorSum2017 <- rowSums(T2017)
T2017 <- cbind(T2017,sectorSum2017)
colnames(T2017)[13] <- "Month Total"
#compare apprehensions by months
sector <- rownames(T2010)
month <- colnames(T2010)
#The function takes in the index of the sector as input
plot_by_months <- function(i){
year <- rbind(T2010[i,1:12],T2017[i,1:12])
barplot(as.matrix(year), beside = T, col = c("red", "yellow"), bty="n",las=2,
main = "Compare Apprehensions Between 2010&2017 by Months")
legend("topright",
c("Month Total 2010","Month Total 2017"),
pch=15,
col=c("red","yellow"),
bty="n"
)
}
#The function takes in month as input
plot_by_sectors <- function(i){
T2010<-t(T2010)
T2017<-t(T2017)
year <- rbind(T2010[i,1:9],T2017[i,1:9])
getOption("scipen")
opt <- options("scipen" = 20)
barplot(year, beside = TRUE, col = c("red", "yellow"), bty="n",las=2,
main = "Compare Apprehensions between 2010&2017 by Sectors"
)
legend("topleft",
c("Sector Total 2010","Sector Total 2017")
pch=15,
T2010 <- read.csv("bp appre 2010.csv")
T2017 <- read.csv("bp appre 2017.csv")
rownames(T2010) <- T2010[,1]
rownames(T2017) <- T2017[,1]
# sum apprehensions of sector and month in 2010
T2010 <- subset(T2010, select = -c(Sector))
# sort month in order
T2010 <- cbind(subset.data.frame(T2010)[,4:12],subset.data.frame(T2010)[,1:3])
monthSum2010 <- colSums((T2010))
T2010 <- rbind(T2010,monthSum2010)
rownames(T2010)[10] <- "Sector Total"
sectorSum2010 <- rowSums(T2010)
T2010 <- cbind(T2010,sectorSum2010)
colnames(T2010)[13] <- "Month Total"
# sum apprehensions of sector and month in 2017
T2017 <- subset(T2017, select = -c(Sector))
# sort month in order
T2017 <- cbind(subset.data.frame(T2017)[,4:12],subset.data.frame(T2017)[,1:3])
monthSum2017 <- colSums((T2017))
T2017 <- rbind(T2017,monthSum2017)
rownames(T2017)[10] <- "Sector Total"
sectorSum2017 <- rowSums(T2017)
T2017 <- cbind(T2017,sectorSum2017)
colnames(T2017)[13] <- "Month Total"
#compare apprehensions by months
sector <- rownames(T2010)
month <- colnames(T2010)
#The function takes in the index of the sector as input
plot_by_months <- function(i){
year <- rbind(T2010[i,1:12],T2017[i,1:12])
barplot(as.matrix(year), beside = T, col = c("red", "yellow"), bty="n",las=2,
main = "Compare Apprehensions Between 2010&2017 by Months")
legend("topright",
c("Month Total 2010","Month Total 2017"),
pch=15,
col=c("red","yellow"),
bty="n"
)
}
#The function takes in month as input
plot_by_sectors <- function(i){
T2010<-t(T2010)
T2017<-t(T2017)
year <- rbind(T2010[i,1:9],T2017[i,1:9])
getOption("scipen")
opt <- options("scipen" = 20)
barplot(year, beside = TRUE, col = c("red", "yellow"), bty="n",las=2,
main = "Compare Apprehensions between 2010&2017 by Sectors"
)
legend("topleft",
c("Sector Total 2010","Sector Total 2017"),
pch=15,
col=c("red", "yellow"),
bty="n")
}
plot_by_sectors(13)
plot_by_months(10)
#In 2010, the sector that has most apprehensions is Tucson
most_2010 <- match(max(T2010[1:9,13]), T2010[1:9,13])
rownames(T2010)[most_2010]
#In 2017, the sector that has most apprehensions is Rio Grande Valley
most_2017 <- match(max(T2017[1:9,13]), T2017[1:9,13])
rownames(T2017)[most_2017]
# table for Tucson
T2010_Tuson <- T2010[most_2010,1:12]
# table for Rio Grande Valley
T2017_RGV <- T2017[most_2017,1:12]
# test if they have same sample mean
t.test(T2010_Tuson, T2017_RGV)
# In 2010, March, April,and May have the most apprehensions
top3_2010 <- order(T2010[10,1:12], decreasing = TRUE)[1:3]
colnames(T2010)[top3_2010]
# In 2017, November, October,and December have the most apprehensions
top3_2017 <- order(T2017[10,1:12], decreasing = TRUE)[1:3]
colnames(T2017)[top3_2017]
# table for March, April, and May in 2010
T2010_3m <- T2010[top3_2010,1:12]
# table for November, October, and December in 2017
T2017_3m <- T2017[top3_2017,1:12]
# test if they have same sample mean
t.test(T2010_3m, T2017_3m)
ts1 <- read.csv("PB monthly summaries.csv")
#delete first column
ts2 <- ts1[2:13]
#rearrange the columns by moving Oct, Nov, and Dec to the end
ts3 <- cbind(subset.data.frame(ts2)[,4:12],subset.data.frame(ts2)[,1:3])
#reverse data
ts4 <- ts3[ nrow(ts3):1, ]
#turn it to vectors
ts5 <- as.vector(t(ts4))
#create time series
ts6 <- ts(ts5,frequency=12,start=c(2000,1))
#plot time series
ts.plot(ts6, gpars=list(main ="Time Series Chart of Apprehensions from 2000 to 2017",xlab="year", ylab="Apprehensions", col= "black", lty=c(1:3)))
#caculate annual averages
ts_avg <- apply(ts4,1,mean)
#create annual averages in time series
ts_avg<-ts(ts_avg,start = c(2000.5), frequency=1)
#create segments and text for annual averages
#for (i in 1:18) {
# segments(1999+i,ts_avg[i],2000+i,ts_avg[i],col = 2,lwd = 1)
#text(2000.3 + i, ts_avg[i], labels = 1999+i, cex=0.6, col = "red" , font=1)
#}
#create points and connected dashed line for better visualization
points(ts_avg,col = "blue", pch=20)
lines(ts_avg,col = "blue", pch=20,lty=6)
#create legends
legend(2010,220000, legend = c("Monthly Apprehensions","Annual Averages by points","Annual Average connected by dashed line"),
col = c("black","blue", "blue"),pch =c(NA,20,NA),lty=c(1,NA,3), cex=0.6)
runApp()
runApp()
